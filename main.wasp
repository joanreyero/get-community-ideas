app GetCommunityIdeasApp { // Main declaration, defines a new web app.
  title: "GetCommunityIdeas app", // Used as a browser tab title.
  dependencies: [
    ("autoprefixer", "^10.4.4"),
    ("postcss", "^8.4.12"),
    ("tailwindcss", "^3.0.23"),
    ("react-hook-form", "^7.29.0"),
    ("react-select", "^5.2.2")
  ]
}

route RootRoute { path: "/", to: MainPage } // Render page MainPage on url `/` (default url).
route CreateIdeaRoute { path: "/create-idea", to: CreateIdeaPage } // Render page CreateIdeaPage on url `/create-idea`.
route CreateIdeaRoute { path: "/ideas", to: ListIdeasPage } // Render page CreateIdeaPage on url `/create-idea`.
route TaskRoute { path: "/idea/:id", to: IdeaPage }


page MainPage {
  // We specify that ReactJS implementation of our page can be
  // found in `ext/MainPage.js` as a default export (uses standard
  // js import syntax).
  component: import Main from "@ext/pages/MainPage.js"
}

page CreateIdeaPage {
  // We specify that ReactJS implementation of our page can be
  // found in `ext/MainPage.js` as a default export (uses standard
  // js import syntax).
  component: import Main from "@ext/pages/CreateIdeaPage.js"
}

page ListIdeasPage {
  component: import Main from "@ext/pages/ListIdeasPage.js"
}

page IdeaPage {
  component: import Main from "@ext/pages/IdeaPage.js"
}

// Entities

entity Idea {=psl
    id          Int     @id @default(autoincrement())
    description String
    twitterHandle String
    isApproved  Boolean @default(false)
    votes       Int     @default(0)
    url        String @default("")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now())
    goals       Goal[]
    category    Category @relation(fields: [categoryId], references: [id])
    categoryId  Int
psl=}

entity Goal {=psl
    id          Int     @id @default(autoincrement())
    name        String  @unique
    ideas       Idea[]
    createdAt   DateTime @default(now())
psl=}

entity Category {=psl
    id          Int     @id @default(autoincrement())
    name        String  @unique
    ideas       Idea[]
    createdAt   DateTime @default(now())
psl=}


// Queries

query getApprovedIdeas {
  fn: import { getApprovedIdeas } from "@ext/queries.js",
  entities: [Idea]
}

query getApprovedUnvotedIdeas {
  fn: import { getApprovedUnvotedIdeas } from "@ext/queries.js",
  entities: [Idea]
}

query getIdeaById {
  fn: import { getIdeaById } from "@ext/queries.js",
  entities: [Idea]
}

query getGoals {
  fn: import { getGoals } from "@ext/queries.js",
  entities: [Goal]
}

query getCategories {
  fn: import { getCategories } from "@ext/queries.js",
  entities: [Category]
}

query getCategoriesAndGoals {
  fn: import { getCategoriesAndGoals } from "@ext/queries.js",
  entities: [Category, Goal]
}


action createIdea {
  fn: import { createIdea } from "@ext/actions.js",
  entities: [Idea]
}

action updateIdea {
  fn: import { updateIdea } from "@ext/actions.js",
  entities: [Idea]
}